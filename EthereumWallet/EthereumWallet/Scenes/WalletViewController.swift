//
//  WalletViewController.swift
//  EthereumWallet
//
//  Created by Sharon Varghese on 25/03/2024.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol WalletDisplayLogic: AnyObject
{
    func displayWalletDetails(_ snapShot: NSDiffableDataSourceSnapshot<Wallet.ViewControllerSection, AnyHashable>)
}

class WalletViewController: UIViewController, WalletDisplayLogic
{
  var interactor: WalletBusinessLogic?
  var router: (NSObjectProtocol & WalletRoutingLogic & WalletDataPassing)?

  // MARK: Object lifecycle
    @IBOutlet weak var tableView: UITableView!
    
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = WalletInteractor()
    let presenter = WalletPresenter()
    let router = WalletRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
    private lazy var tableViewDataSource: UITableViewDiffableDataSource<Wallet.ViewControllerSection, AnyHashable> = {
        let dataSource = UITableViewDiffableDataSource<Wallet.ViewControllerSection, AnyHashable>(tableView: tableView) { tableView, indexPath, model in
            switch model {
            case let model as DetailsTableViewCell.Presentable:
                if let cell = tableView.dequeueCell(withType: DetailsTableViewCell.self, for: indexPath) as? DetailsTableViewCell {
                    cell.data = model
                    return cell
                }
            case let model as NFTTableViewCell.Presentable:
                if let cell = tableView.dequeueCell(withType: NFTTableViewCell.self, for: indexPath) as? NFTTableViewCell {
                    cell.data = model
                    return cell
                }
                
            default: return UITableViewCell()
            }
            return UITableViewCell()
        }
        return dataSource
    }()
    
    // MARK: UIViewControllerLifeCycle
  override func viewDidLoad()
    {
        super.viewDidLoad()
        interactor?.startNetworkMonitring()
        registerTableView()
        setupUI()
        loadData()
    }
  

    func setupUI() {
        self.view.backgroundColor = CustomColor.backgroundBlack.instance
    }
    
    func loadData() {
        ActivityLoader.shared.showActivityIndicator(in: self.view)
        interactor?.fetchWalletDetails(address: "0x95222290DD7278Aa3Ddd389Cc1E1d165CC4BAfe5")
    }
    func registerTableView() {
        tableView.registerCell(type: DetailsTableViewCell.self)
        tableView.registerCell(type: NFTTableViewCell.self)
    }
    
    // MARK: DisplayLogic
    func displayWalletDetails(_ snapShot: NSDiffableDataSourceSnapshot<Wallet.ViewControllerSection, AnyHashable>) {
        tableViewDataSource.apply(snapShot)
        ActivityLoader.shared.hideActivityIndicator()
    }
}
